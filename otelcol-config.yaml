receivers:
  # https://github.com/open-telemetry/opentelemetry-collector-contrib/blob/main/receiver/hostmetricsreceiver/README.md
  hostmetrics:
    # docker で動かす場合､ホストの procfs 等を読めるようにする必要があります｡
    #    docker run -v /:/hostfs ....
#   root_path: /host/
    collection_interval: 1m
    scrapers:
      # system.cpu.time 等を出力
      cpu:
      # system.memory.usage
      memory:
      disk:
      filesystem:
      load:
      network:
      # プロセス数
      processes:
      # uptime等
      system:

  otlp:
    protocols:
      grpc:
        endpoint: "0.0.0.0:4319"

  # docker のログを送る例
  filelog:
    include:
      - 'logs/containers/*/*-json.log'
    exclude: []
    start_at: end
    include_file_name: true
    include_file_path: true
    operators:
      # 1. JSON解析
      - type: json_parser
        id: docker_json_parser
        parse_from: body
        timestamp:
          parse_from: attributes.time
          layout_type: strptime
          layout: '%Y-%m-%dT%H:%M:%S.%fZ'
      
      # 2. ログメッセージを本文に移動
      - type: move
        id: move_log_to_body
        from: attributes.log
        to: body
      
      # 3. ストリーム情報を属性として保持
      - type: add
        id: add_stream_attribute
        field: attributes.stream
        value: EXPR(attributes.stream)
      
      # 4. コンテナIDをファイル名から抽出
      - type: regex_parser
        id: extract_container_id
        parse_from: attributes["log.file.name"]
        regex: '^(?P<container_id>[a-f0-9]+)-json\.log$'

processors:
  # データをまとめてくれる｡ほぼ必須｡
  # https://github.com/open-telemetry/opentelemetry-collector/blob/main/processor/batchprocessor/README.md
  batch: {}

  # resourcedetection でホスト名などの基本的な attribute を追加可能｡
  # system と env を使うだけなら､'resource' を使うなら "${HOSTNAME}" などから拾っても良い｡
  # https://github.com/open-telemetry/opentelemetry-collector-contrib/blob/main/processor/resourcedetectionprocessor/README.md
  resourcedetection:
    detectors:
      # OTEL_RESOURCE_ATTRIBUTES 変数の値を attribute に展開します
      - env
      # os.type, host.name を付与してくれる｡
      # https://github.com/open-telemetry/opentelemetry-collector-contrib/blob/main/processor/resourcedetectionprocessor/internal/system/documentation.md
      # https://github.com/open-telemetry/opentelemetry-collector-contrib/blob/main/processor/resourcedetectionprocessor/README.md#system-metadata
      - system
    timeout: 2s
    override: false

  # resource で attribute を追加できます｡
  # https://github.com/open-telemetry/opentelemetry-collector-contrib/blob/main/processor/resourceprocessor/README.md
  resource/add_attr:
    attributes:
      - key: service.name
        value: "my-service"
        action: insert

  # attributes を body に入れます
  transform/add_attrs_into_body:
    log_statements:
      # 元のメッセージをmessageフィールドに
      - 'set(log.body, {"message": log.body})'
      # 属性をbodyにマージ
      - merge_maps(log.body, log.attributes, "upsert")
      # 属性をクリア
      - set(log.attributes, {})

exporters:
  # debug 用の exporter
  #
  # log/metrics を stdout に出力する｡
  # https://github.com/open-telemetry/opentelemetry-collector/blob/main/exporter/debugexporter/README.md
  debug:
    verbosity: normal
    # verbosity: detailed
    # verbosity: basic

  # ログの exporter
  # https://github.com/open-telemetry/opentelemetry-collector/blob/main/exporter/otlphttpexporter/README.md
  otlphttp/logs:
    # endpoint にパスが不要なことに注意｡自動的に /v1/logs を追加してリクエストします｡
    endpoint: "https://${LOG_RESOURCE_ID}.logs.monitoring.global.api.sacloud.jp"
    # Authorization ヘッダを付与します｡
    # basicauth を使ってもいいけどこれで十分｡
    # ref. https://github.com/open-telemetry/opentelemetry-collector-contrib/blob/main/extension/basicauthextension/README.md
    headers:
      Authorization: "Basic ${LOG_AUTH}"

  # メトリクスの exporter
  # https://github.com/open-telemetry/opentelemetry-collector-contrib/blob/main/exporter/prometheusremotewriteexporter/README.md
  prometheusremotewrite/metrics:
    # メトリクスははエンドポイントの URL がフルに必要
    endpoint: "https://${METRIC_RESOURCE_ID}.metrics.monitoring.global.api.sacloud.jp/prometheus/api/v1/write"
    # Authorization ヘッダを付与します｡
    # basicauth を使ってもいいけどこれで十分｡
    # ref. https://github.com/open-telemetry/opentelemetry-collector-contrib/blob/main/extension/basicauthextension/README.md
    # 
    # username には ID に加えて `m` の prefix が必要なことに注意されたい｡
    # # 例: username: `m123456`, password: `12345678-1234-5678-9abc-123456789abc`
    # $ echo -n "m123456:12345678-1234-5678-9abc-123456789abc" | base64
    # bTEyMzQ1NjoxMjM0NTY3OC0xMjM0LTU2NzgtOWFiYy0xMjM0NTY3ODlhYmM=
    headers:
      Authorization: "Basic ${METRIC_AUTH}"
    resource_to_telemetry_conversion:
      enabled: true
    # ラベルを prometheusremotewrite で付与することも可能
    external_labels:
      datacenter: "tokyo"


service:
  # otel 全体のログレベルはここで制御可能
  telemetry:
    logs:
      level: info
        # level: debug

  pipelines:
    # ログパイプライン
    logs:
      receivers:
        - otlp
        - filelog
      processors:
        - resource/add_attr
        - resourcedetection
        - transform/add_attrs_into_body
        - batch
      exporters:
        - debug
        - otlphttp/logs
    # メトリクスパイプライン
    metrics:
      receivers:
        - otlp
        - hostmetrics
      processors:
        - resource/add_attr
        - resourcedetection
        - batch
      exporters:
        - debug
        - prometheusremotewrite/metrics

